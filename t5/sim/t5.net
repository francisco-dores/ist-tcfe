*-----------------------------------------------------------------------------
*
* To use a subcircuit, the name must begin with 'X'.  For example:
* X1 1 2 3 4 5 uA741
*
* connections:   non-inverting input
*                |  inverting input
*                |  |  positive power supply
*                |  |  |  negative power supply
*                |  |  |  |  output
*                |  |  |  |  |
.subckt uA741    1  2  3  4  5
*
  c1   11 12 8.661E-12
  c2    6  7 30.00E-12
  dc    5 53 dx
  de   54  5 dx
  dlp  90 91 dx
  dln  92 90 dx
  dp    4  3 dx
  egnd 99  0 poly(2) (3,0) (4,0) 0 .5 .5
  fb    7 99 poly(5) vb vc ve vlp vln 0 10.61E6 -10E6 10E6 10E6 -10E6
  ga    6  0 11 12 188.5E-6
  gcm   0  6 10 99 5.961E-9
  iee  10  4 dc 15.16E-6
  hlim 90  0 vlim 1K
  q1   11  2 13 qx
  q2   12  1 14 qx
  r2    6  9 100.0E3
  rc1   3 11 5.305E3
  rc2   3 12 5.305E3
  re1  13 10 1.836E3
  re2  14 10 1.836E3
  ree  10 99 13.19E6
  ro1   8  5 50
  ro2   7 99 100
  rp    3  4 18.16E3
  vb    9  0 dc 0
  vc    3 53 dc 1
  ve   54  4 dc 1
  vlim  7  8 dc 0
  vlp  91  0 dc 40
  vln   0 92 dc 40
.model dx D(Is=800.0E-18 Rs=1)
.model qx NPN(Is=800.0E-18 Bf=93.75)
.ends



.options savecurrents

Vcc vcc 0 5.0
Vee vee 0 -5.0
Vin in 0 0 ac 1.0 sin(0 10m 1k)

X1 0 inv_in vcc vee out uA741

R1 r1 inv_in 1000
R2 inv_in out 1000

C1 in r1 220n
C2 inv_in out 220n

* load
RL out 0 8

.op
.end

.control

print all

* time analysis
tran 1e-5 1e-2

plot v(out)
hardcopy vo1.ps v(out)
echo vo1_FIG


* frequency analysis
ac dec 10 10 100MEG

plot vdb(out)
hardcopy vdb.ps vdb(out)
echo vdb_FIG
plot vp(out)
hardcopy vp.ps vp(out)
echo vp_FIG


let gain = abs(v(out)[20])/abs(v(in)[20])
print gain
let gaindb = vdb(out)-vdb(in)
*meas AC gain MAX gaindb
*meas AC gain_mil WHEN
let gain_1 = gaindb[20]
let gain_11 = gain[20]
print gain_1
let gain_2 = gaindb[100]
print gain_2
meas AC freq_1 WHEN gaindb = gain_1
meas AC freq_11 WHEN gain = gain_11
meas AC freq_2 WHEN gaindb = gain_2
print freq_1
print freq_2
*let gain_dev = abs(gain-40)

*let ref=gaindb-3

*meas AC low WHEN vdb(out) = ref
*meas AC up WHEN vdb(out) = ref CROSS=LAST

*let cent_freq = sqrt(low*up)
*let cent_freq_dev = abs(cent_freq-100)

*let bandwidth=up-low

* cost
*let cost_c_opam=(8.661E-12+30.00E-12)*1000000
*let cost_r_opam=(100.0E3+5.305E3+5.305E3+1.836E3+1.836E3+13.19E6+50+100+18.16E3)/1000
*let cost_q_opam=2*0.1
*let cost_d_opam=5*0.1
*let cost_rest=
*let cost=cost_r_opam+cost_c_opam+cost_q_opam+cost_d_opam+cost_rest

* merit
*let merit=(1/(cost*gain_dev*cent_freq_dev))

* input impedance
*let Zi=abs(v(in)[20]/vin#branch[20])


* tables (print)

*echo "merit_TAB"
*echo "Merit = $&merit"
*echo "Cost = $&cost MU"
*echo "merit_END"

*echo "gain_TAB"
*echo "Output Voltage Gain dB = $&gain"
*echo "Central Freq = $&cent_freq"
*echo "Low CO Freq = $&low"
*echo "Up CO Freq = $&up"
*echo "Gain Deviation = $&gain_dev"
*echo "Central Freq Deviation =$&cent_freq_dev"
*echo "Bandwidth = $&bandwidth"
*echo "gain_END"

*input impedance in kohm
*plot input impedance
*hardcopy inputimpedance.ps abs(v(in2)[40]/vin#branch[40]/(-1000))

*echo "inputZ_TAB"
*echo "ZI = $&Zi"
*echo "inputZ_END"


*input impedance in kohm
*print v(in)[40]/R1[i]/1000


quit
.endc 

.end
